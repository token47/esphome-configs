# Hardware:
# - brand: WEG, model: Smart Plugue 10A, module: Tuya TYWE2S, MCU: ESP-8285, w/ POW
#
# Module info: https://developer.tuya.com/en/docs/iot/wifie2smodule?id=K9605u79tgxug
#
# Features: Two leds (both controllable), one relay, one switch, POW
#
# +------+---------------------+------------------------------------+------------------------------+
# | Name |   Number   | GPIO   | Function                           | Notes                        |
# +------+---------------------+------------------------------------+------------------------------+
# | RST  |     10     |        | reset (not connected)              |                              |
# | ADC  |      8     |  ADC   | analogic input (not connected)     | Free GPIO (ADC, input only)  | 
# | IO13 |      6     | GPIO13 | Relay, non-inverted                |                              |
# | IO4  |      4     | GPIO4  | bl0937 CF                          |                              |
# | IO5  |      2     | GPIO5  | bl0937 CF1                         |                              |
# | 3V3  |      1     |        | power                              |                              |
# | GND  |      3     |        | power                              |                              |
# | RX0  |      5     | GPIO3  | Push Button w/ hw pullup, inverted | no need to use pull-up in sw |
# | TX0  |      7     | GPIO1  | Blue led, inverted                 |                              |
# | IO12 |      9     | GPIO12 | Red led, inverted                  |                              |
# | IO14 |     11     | GPIO14 | bl0937 SEL, inverted               |                              |
# | IO0  | test point | GPIO0  | (not connected)                    | Free GPIO                    |
# | TX1  | test point | GPIO2  | (not connected)                    | Free GPIO                    |
# +------+------------+--------+------------------------------------+------------------------------+
#
# Notes:
# - Pin numbers above are for the module, not the MCU (this module has different
#   order of pins than most of the others, pay attention to the docs)
# - These are the GPIOs that you can actually access outside of the module
#   the chip inside has many more free GPIOs but they are not exposed so
#   you cannot actually use them for anything useful.
# - On this module, flashing is done through TX2/RX2 (testpoints), not the ones on the bottom
# - GPIOA_0 (PA0) cannot be pulled high on boot!

esp8266:
  board: esp8285

# This board uses the RX/TX pins for normal I/O so cannot log over uart
logger: !extend
  baud_rate: 0

# Status led is the Blue one
status_led:
  id: led
  name: "Status LED"
  pin:
    number: GPIO1 # TX pin
    mode: OUTPUT
    inverted: True # True (it is inverted)

binary_sensor:
  - platform: gpio
    name: "Push Button"
    id: push_button
    pin:
      number: GPIO3 # RX pin
      mode: INPUT
      inverted: True

switch:
  # The relay
  - platform: gpio
    name: "Relay"
    id: relay
    pin:
      number: GPIO13
      mode: OUTPUT
      inverted: False
  # the relay LED is the red one
  - platform: gpio
    id: relay_led
    name: "Relay LED"
    pin:
      number: GPIO12
      mode: OUTPUT
      inverted: True

sensor:
  - platform: hlw8012
    id: power_sensor
    model: BL0937
    sel_pin:
      number: GPIO14
      inverted: true
    cf_pin: GPIO4
    cf1_pin: GPIO5
    change_mode_every: 1
    update_interval: 5s
    current_resistor: 0.001 ohm
    voltage_divider: 2351 # from esphome doc
    current:
      id: current
      name: "POW - Current"
      unit_of_measurement: "A"
      accuracy_decimals: 3
      #filters:
      #  - multiply: 1.0
    voltage:
      id: voltage
      name: "POW - Voltage"
      unit_of_measurement: "V"
      filters:
        - multiply: 0.707 # Peak -> RMS
        - multiply: 0.983 # Correction
    power:
      id: power
      name: "POW - Power"
      unit_of_measurement: "W"
      #filters:
      #  - multiply: 1.0
    energy:
      id: energy
      name: "POW - Energy"
      unit_of_measurement: "Wh"
      #filters:
      #  - multiply: 1.0
